{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./lib/enemy.js","webpack:///./lib/game.js","webpack:///./lib/link.js","webpack:///./lib/schmelda.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;;AClFA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEe,oEAAK;;;;;;;;;;;;;AChDpB;AAAA;AAAA;AAA+B;AACF;;AAE7B;AACA;AACA,qBAAqB,iDAAK;AAC1B;AACA,oBAAoB,gDAAI;AACxB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,0BAA0B,iDAAK;;AAE/B;;AAEA;;AAEe,mEAAI,EAAC;;;;;;;;;;;;;ACjCpB;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,EAAE;;AAEF;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,kCAAkC,kBAAkB;;AAEpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kCAAkC,kBAAkB;;AAEpD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEe,mEAAI;;AAEnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,kBAAkB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,MAAM;AACN;AACA;AACA,MAAM;AACN;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;AClaA;AAAA;AAA6B;;AAE7B;AACA;AACA;AACA,mBAAmB,gDAAI;AACvB;AACA;AACA,CAAC","file":"./bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./lib/schmelda.js\");\n","class Enemy {\n  constructor(canvas, ctx) {\n    this.position = [300, 300];\n    this.ctx = ctx\n    this.width = 50;\n    this.height = 50;\n    this.move = this.move.bind(this)\n    this.draw = this.draw.bind(this)\n    this.canvas = canvas;\n    this.life = 3;\n    this.speed = 2;\n  }\n\n  recoil() {\n    // this.position = [this.position[0] + 50, this.position[1] + 50]\n    this.ctx.fillStyle = 'red';\n    this.ctx.fill();\n  }\n\n  draw() {\n    this.ctx.beginPath();\n    this.ctx.rect(this.position[0], this.position[1], this.width, this.height)\n    this.ctx.fillStyle = 'black';\n    this.ctx.fill();\n    this.ctx.lineWidth = 1\n    this.ctx.strokeStyle = 'yellow';\n    this.ctx.stroke();\n    this.move()\n  }\n\n  move() {\n    this.position[0] += this.speed;\n    if (this.position[0] + this.width > this.canvas.width || this.position[0] < 0) {\n      this.speed = this.speed*-1\n    }\n  }\n\n  hitbox() {\n    return {\n      x: this.position[0],\n      y: this.position[1],\n      width: this.width,\n      height: this.height,\n    }\n  };\n\n}\n\nexport default Enemy\n","import Enemy from './enemy.js';\nimport Link from './link.js';\n\nclass Game {\n  constructor(canvas, ctx) {\n    this.enemy = new Enemy(canvas, ctx);\n    this.enemies = [];\n    this.link = new Link(canvas, ctx);\n    this.ctx = ctx;\n    this.canvas = canvas;\n    this.draw = this.draw.bind(this);\n  }\n\n  draw() {\n    this.enemy.draw();\n    this.link.draw();\n    if (this.link.collidedWith(this.enemy)) {\n      // this.link.recoil();\n      console.log(\"ouch!\")\n    }\n    if (this.link.attackedObject(this.enemy)) {\n      this.enemy.recoil();\n    }\n    window.requestAnimationFrame(this.draw)\n  }\n\n  makeEnemy() {\n    this.enemies.push(new Enemy(this.canvas, this.ctx));\n\n  }\n\n}\n\nexport default Game;\n","const directions = [\"walkRight\", \"walkLeft\", \"walkDown\", \"walkUp\"]\n\nconst dir_hash_y = {\n  \"walkRight\": 120,\n  \"walkLeft\": 30,\n  \"walkDown\": 30,\n  \"walkUp\": 120,\n};\n\nconst dir_hash_x = {\n  \"walkRight\": [241, 271, 301, 331, 361, 391],\n  \"walkLeft\": [241, 271, 301, 331, 361, 391],\n  \"walkDown\": [0, 30, 60, 90, 120, 150, 180, 210],\n  \"walkUp\": [0, 30, 60, 90, 120, 150, 180, 210],\n};\n\nconst standing = [\n  [331, 120],\n  [151, 0],\n  [31, 0],\n  [61, 0],\n]; //right left down up\n\nconst attack_directions = [\"attackRight\", \"attackLeft\", \"attackDown\", \"attackUp\"]\n\nconst attack_y = {\n  \"attackRight\": [180, 180, 180, 180, 178],\n  \"attackLeft\": [90, 90, 90, 90, 88],\n  \"attackDown\": [85, 85, 84, 84, 84, 84],\n  \"attackUp\": [175, 174, 174, 174, 174],\n}\n\nconst attack_x = {\n  \"attackRight\": [237, 267, 297, 327, 357],\n  \"attackLeft\": [237, 267, 297, 327, 357],\n  \"attackDown\": [0, 30, 60, 90, 120, 146],\n  \"attackUp\": [0, 30, 60, 90, 120],\n}\n\n\nclass Link {\n  constructor(canvas, ctx) {\n    this.canvas = canvas;\n    this.ctx = ctx;\n    this.link = new Image();\n    this.link.src = './assets/link_sprites.png';\n    this.width = 20;\n    this.height = 25;\n    this.scale = 4;\n    this.scaledWidth = this.scale*this.width;\n    this.scaledHeight = this.scale*this.height;\n    this.currentLoopIndex = 0;\n    this.currentAttackLoopIndex = 0;\n    this.currentDirection = 0;\n    this.position = [0, 0]\n    this.frameCount = 0;\n    this.attackFrameCount = 0;\n    this.life = 3;\n    this.attacking = false;\n    this.walking = true;\n\n    this.step = this.step.bind(this);\n    this.move = this.move.bind(this);\n    this.stand = this.stand.bind(this);\n    this.attack = this.attack.bind(this);\n    this.combineCallbacks = this.combineCallbacks.bind(this);\n  };\n\n  hitbox() {\n    return {\n      x: this.position[0],\n      y: this.position[1],\n      width: this.scaledWidth,\n      height: this.scaledHeight,\n    }\n  };\n\n  hurtbox() {\n\n    if (this.currentDirection === 0) {\n      return {\n        x: this.position[0] + this.scaledWidth,\n        y: this.position[1],\n        width: 8*this.scale,\n        height: this.scaledHeight,\n      }\n    } else if (this.currentDirection === 1) {\n      return {\n        x: this.position[0] - 4*this.scale,\n        y: this.position[1],\n        width: 4*this.scale,\n        height: this.scaledHeight,\n      }\n    } else if (this.currentDirection === 2) {\n      return {\n        x: this.position[0],\n        y: this.position[1] + this.scaledHeight,\n        width: this.scaledWidth + 4.5*this.scale,\n        height: 8*this.scale,\n      }\n    } else {\n      return {\n        x: this.position[0],\n        y: this.position[1] - 5*this.scale,\n        width: this.scaledWidth + 4.5*this.scale,\n        height: 5*this.scale,\n      }\n    }\n  }\n\n  collidedWith(object) {\n    let linkHit = this.hitbox()\n    let objectHit = object.hitbox()\n    if (\n      linkHit.x < objectHit.x + objectHit.width &&\n      linkHit.x + linkHit.width > objectHit.x &&\n      linkHit.y < objectHit.y + objectHit.height &&\n      linkHit.y + linkHit.height > objectHit.y\n      ) {\n        return true\n      } else {\n        return false\n    }\n  };\n\n  attackedObject(object) {\n    let swordHit = this.hurtbox()\n    let objectHit = object.hitbox()\n    if ( this.attacking &&\n      swordHit.x < objectHit.x + objectHit.width &&\n      swordHit.x + swordHit.width > objectHit.x &&\n      swordHit.y < objectHit.y + objectHit.height &&\n      swordHit.y + swordHit.height > objectHit.y\n      ) {\n        return true\n      } else {\n        return false\n    }\n  }\n\n\n  recoil() {\n    this.position = [this.position[0] - 50, this.position[1] - 50]\n  }\n\n  //moving\n\n  drawWalkFrame(direction, frameX, frameY) {\n    this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height)\n    this.ctx.drawImage(\n      this.link,\n      dir_hash_x[direction][frameX],\n      dir_hash_y[direction],\n      this.width,\n      this.height,\n      this.position[0],\n      this.position[1],\n      this.scaledWidth,\n      this.scaledHeight,\n    )\n    // this.ctx.beginPath();\n    // this.ctx.rect(this.position[0], this.position[1], this.scaledWidth, this.scaledHeight)\n    // this.ctx.lineWidth = 1\n    // this.ctx.strokeStyle = 'yellow';\n    // this.ctx.stroke();\n  };\n\n  step() {\n      if (this.walking === true) {\n\n      let numFrames = dir_hash_x[directions[this.currentDirection]].length\n      let cycleLoop = Array.from({length: numFrames}, (x,i) => i);\n\n      this.frameCount++\n      if (this.frameCount < 5) {\n        return;\n      }\n      this.frameCount = 0;\n      this.drawWalkFrame(\n        directions[this.currentDirection],\n        cycleLoop[this.currentLoopIndex],\n\n      );\n      this.currentLoopIndex++;\n      if (this.currentLoopIndex >= cycleLoop.length) {\n        this.currentLoopIndex = 0;\n      }\n    }\n  };\n\n  move(e) {\n    this.walking = true\n    if (e.key === \"ArrowLeft\") {\n      this.attacking = false;\n      this.position[0] -= 20;\n      this.currentDirection = 1;\n    } else if (e.key === \"ArrowRight\") {\n      this.attacking = false;\n      this.position[0] += 20;\n      this.currentDirection = 0;\n    } else if (e.key === \"ArrowDown\") {\n      this.attacking = false;\n      this.position[1] += 20;\n      this.currentDirection = 2;\n    } else if (e.key === \"ArrowUp\") {\n      this.attacking = false;\n      this.position[1] -= 20;\n      this.currentDirection = 3;\n    } else {\n      this.walking = false;\n    }\n  };\n\n  //attacking\n\n  drawAttackFrame(direction, frameX, frameY) {\n    let attackWidth;\n    let attackHeight;\n    if (direction === \"attackUp\" || direction === \"attackDown\") {\n      attackWidth = 24.5;\n      attackHeight = 35;\n    } else {\n      attackWidth = 28;\n      attackHeight = 25;\n    };\n\n    this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height)\n    this.ctx.drawImage(\n      this.link,\n      attack_x[direction][frameX],\n      attack_y[direction][frameY],\n      attackWidth,\n      attackHeight,\n      this.position[0],\n      this.position[1],\n      attackWidth*this.scale,\n      attackHeight*this.scale,\n    )\n    // this.ctx.beginPath();\n    // this.ctx.rect(this.position[0], this.position[1], attackWidth*this.scale, attackHeight*this.scale)\n    // this.ctx.lineWidth = 1\n    // this.ctx.strokeStyle = 'yellow';\n    // this.ctx.stroke();\n  };\n\n  swing() {\n    if (this.attacking === true) {\n      let numFrames = attack_x[attack_directions[this.currentDirection]].length\n      let cycleLoop = Array.from({length: numFrames}, (x,i) => i);\n\n      this.attackFrameCount++\n      if (this.attackFrameCount < 3) {\n        return;\n      }\n      this.attackFrameCount = 0;\n\n      this.drawAttackFrame(\n        attack_directions[this.currentDirection],\n        cycleLoop[this.currentAttackLoopIndex],\n        cycleLoop[this.currentAttackLoopIndex],\n      ),\n      this.currentAttackLoopIndex++;\n      if (this.currentAttackLoopIndex >= cycleLoop.length) {\n        this.currentAttackLoopIndex = 0;\n        this.attacking = false;\n        this.walking = true;\n      }\n    }\n  }\n\n  attack(e) {\n    if (e.key === \"a\") {\n      this.walking = false;\n      this.attacking = true;\n      console.log(\"attacking\")\n    } else {\n      this.attacking = false;\n    }\n  }\n\n  stand() {\n    this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height)\n    this.ctx.drawImage(\n      this.link,\n      standing[this.currentDirection][0],\n      standing[this.currentDirection][1],\n      this.width,\n      this.height,\n      this.position[0],\n      this.position[1],\n      this.scaledWidth,\n      this.scaledHeight,\n    );\n  }\n\n  draw() {\n    this.swing();\n    this.step();\n  };\n\n  combineCallbacks(e) {\n    this.attack(e);\n    this.move(e);\n  }\n\n}\n\nexport default Link\n\n// --------------------------------------\n// let link = new Image();\n// link.src = './assets/link_sprites.png';\n// link.onload = function() {\n//   init()\n// };\n//\n//\n// const directions = [\"walkRight\", \"walkLeft\", \"walkDown\", \"walkUp\"]\n//\n// const dir_hash_y = {\n//   \"walkRight\": 120,\n//   \"walkLeft\": 30,\n//   \"walkDown\": 30,\n//   \"walkUp\": 120,\n// }\n//\n// const dir_hash_x = {\n//   \"walkRight\": [241, 271, 301, 331, 361, 391],\n//   \"walkLeft\": [241, 271, 301, 331, 361, 391],\n//   \"walkDown\": [0, 30, 60, 90, 120, 150, 180, 210],\n//   \"walkUp\": [0, 30, 60, 90, 120, 150, 180, 210],\n// }\n//\n// const standing = [\n//   [331, 120],\n//   [151, 0],\n//   [31, 0],\n//   [61, 0],\n// ] //right left down up\n//\n// const canvas = document.getElementById('canvas');\n// const ctx = canvas.getContext('2d');\n// const width = 20;\n// const height = 25;\n// const scale = 4;\n// const scaledWidth = scale*width;\n// const scaledHeight = scale*height;\n// const offset = 30;\n//\n// function drawFrame(direction, frameX, frameY, canvasX, canvasY) {\n//   ctx.drawImage(\n//     link, dir_hash_x[direction][frameX], dir_hash_y[direction], width, height, canvasX, canvasY, scaledWidth, scaledHeight);\n// }\n//\n// let currentLoopIndex = 0;\n// let frameCount = 0;\n// let currentDirection = 0;\n// let canvasX = 0;\n// let canvasY = 0;\n// let moving = false\n//\n// function init() {\n//   step()\n// }\n//\n// function step() {\n//   if (!moving) {\n//     stand()\n//     return\n//   }\n//\n//   let numFrames = dir_hash_x[directions[currentDirection]].length\n//   let cycleLoop = Array.from({length: numFrames}, (x,i) => i);\n//   frameCount ++\n//   if (frameCount < 4) {\n//     window.requestAnimationFrame(step);\n//     return;\n//   }\n//   frameCount = 0;\n//   ctx.clearRect(0, 0, canvas.width, canvas.height)\n//   drawFrame(directions[currentDirection], cycleLoop[currentLoopIndex], dir_hash_y[directions[currentDirection]], canvasX, canvasY, 80, 100);\n//   currentLoopIndex++;\n//   if (currentLoopIndex >= cycleLoop.length) {\n//     currentLoopIndex = 0;\n//   }\n//   window.requestAnimationFrame(step);\n// }\n//\n// function move(e) {\n//   moving = true\n//   if (e.key === \"ArrowLeft\") {\n//     canvasX -= 25;\n//     currentDirection = 1;\n//   } else if (e.key === \"ArrowRight\") {\n//     canvasX += 25;\n//     currentDirection = 0;\n//   } else if (e.key === \"ArrowDown\") {\n//     canvasY += 25;\n//     currentDirection = 2;\n//   } else if (e.key === \"ArrowUp\") {\n//     canvasY -= 25;\n//     currentDirection = 3;\n//   } else {\n//     return\n//   }\n//   step()\n// }\n//\n// function stand(e) {\n//   moving = false\n//   ctx.clearRect(0, 0, canvas.width, canvas.height)\n//   ctx.drawImage(\n//     link, standing[currentDirection][0], standing[currentDirection][1], width, height, canvasX, canvasY, scaledWidth, scaledHeight\n//   );\n// }\n//\n\n// document.onkeydown = this.link.move;\n// document.onkeyup = this.stand;\n","import Game from './game.js';\n\ndocument.addEventListener('DOMContentLoaded', ()=> {\n  const mainCanvas = document.getElementById('main-window');\n  const ctx = mainCanvas.getContext('2d');\n  const game = new Game(mainCanvas, ctx)\n  game.draw();\n  document.onkeydown = game.link.combineCallbacks;\n});\n"],"sourceRoot":""}